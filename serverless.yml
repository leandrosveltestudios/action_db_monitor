service: action-db-monitor
useDotenv: true
frameworkVersion: "3"
variablesResolutionMode: 20210326

custom:
  client: action-market-research
  project: action-db-monitor
  serverless-offline:
    httpPort: 3001
  serverless-offline-ssm:
    stages:
      - offline

package:
  individually: true
  patterns:
    - node_modules

provider:
  name: aws
  runtime: nodejs16.x
  lambdaHashingVersion: "20201221"
  tags:
    client: ${self:custom.client}
    project: ${self:custom.project}
  httpApi:
    useProviderTags: true
  environment:
    EMAIL_AWS_REGION: ap-southeast-2
    EMAIL_AWS_ACCESS_KEYID: ${ssm:email-aws-access-keyid}
    EMAIL_AWS_SECRET_ACCESS_KEY: ${ssm:email-aws-secret-access-key}
    STAGING_AWS_ACCESS_KEYID: ${ssm:staging-aws-access-keyid}
    STAGING_AWS_SECRET_ACCESS_KEY: ${ssm:staging-aws-secret-access-key}
    LIVE_AWS_ACCESS_KEYID: ${ssm:live-aws-access-keyid}
    LIVE_AWS_SECRET_ACCESS_KEY: ${ssm:live-aws-secret-access-key}

functions:
  action_db_monitor:
    name: ${self:custom.project}-${sls:stage}-sync
    description: ${self:custom.project}-${sls:stage}-sync
    handler: action_db_monitor.handler
    events:
      - schedule: cron(0 6 * * ? *)
    timeout: 300
    tags:
      client: ${self:custom.client}
      project: ${self:custom.project}
    package:
      patterns:
        - index.js
